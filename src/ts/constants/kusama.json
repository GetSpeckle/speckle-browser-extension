{
  "chain": "Kusama",
  "color": "#000",
  "genesisHash": "0xb0a8d493285c2df73290dfb7e61f870f17b41801197a149ca93654499ea3dafe",
  "icon": "polkadot",
  "metaCalls": "",
  "specVersion": 2023,
  "ss58Format": 2,
  "tokenDecimals": 12,
  "tokenSymbol": "KSM",
  "types": {
    "Address": "AccountId",
    "Keys": "SessionKeys5",
    "LookupSource": "AccountId",
    "ProxyType": {
      "_enum": [
        "Any",
        "NonTransfer",
        "Governance",
        "Staking",
        "IdentityJudgement"
      ]
    }
  }
}
